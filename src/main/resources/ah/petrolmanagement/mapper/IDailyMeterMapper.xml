<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ah.petrolmanagement.persistence.IDailyMeterMapper">
	<resultMap id="dailyResult" type="java.util.Map">
		<result column="ID" property="id" />
		<result column="TANK_ID" property="tankId" />
		<result column="TANK_NAME" property="tankName" />
		<result column="PRODUCT_ID" property="productId" />
		<result column="SHIFT" property="shift" />
		<result column="PRICE_ID" property="priceId" />
		<result column="PRICE" property="price" />
		<result column="METER_OLD" property="meterOld" />
		<result column="METER_NEW" property="meterNew" />
		<result column="METER_ELEC_OLD" property="meterElecOld" />
		<result column="METER_ELEC_NEW" property="meterElecNew" />
		<result column="INS_TIME" property="insTime" />
		<result column="INS_USER" property="insUser" />
		<result column="UPD_TIME" property="updTime" />
		<result column="UPD_USER" property="updUser" />
		<result column="DEL_FLAG" property="delFlag" />
		<result column="DEL_TIME" property="delTime" />
		<result column="DEL_USER" property="delUser" />
	</resultMap>

	<select id="select" parameterType="java.util.Map" resultMap="dailyResult">
		SELECT
			d.ID,
			d.TANK_ID,
			t.TANK_NAME,
			t.PRODUCT_ID,
			d.SHIFT,
			d.PRICE_ID,
			pp.PRICE,
			d.METER_OLD,
			d.METER_NEW,
			d.METER_ELEC_OLD,
			d.METER_ELEC_NEW,
			d.INS_TIME,
			d.INS_USER,
			d.UPD_TIME,
			d.UPD_USER,
			d.DEL_FLAG,
			d.DEL_TIME,
			d.DEL_USER
		FROM
			daily_meter d
		INNER JOIN
			tank t
				ON
					d.TANK_ID = t.ID
		INNER JOIN
			product_price pp
				ON
					d.PRICE_ID = pp.ID
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="map.shift != null">
				d.SHIFT = #{map.shift}
			</if>
			<if test="map.insTime != null">
				AND d.INS_TIME::DATE = #{map.insTime}::DATE
			</if>
			<if test="map.dateFrom != null and map.dateTo == null">
				AND d.INS_TIME::DATE = #{map.dateFrom}::DATE
			</if>
			<if test="map.dateFrom != null and map.dateTo != null">
				AND d.INS_TIME::DATE <![CDATA[>=]]> #{map.dateFrom}::DATE
				AND d.INS_TIME::DATE <![CDATA[<=]]> #{map.dateTo}::DATE
			</if>
			<if test="map.monthFrom != null and map.monthTo == null">
				AND EXTRACT (MONTH FROM d.INS_TIME) = EXTRACT (MONTH FROM #{map.monthFrom}::DATE)
			</if>
			<if test="map.monthFrom != null and map.monthTo != null">
				AND EXTRACT (MONTH FROM d.INS_TIME) <![CDATA[>=]]> EXTRACT (MONTH FROM #{map.monthFrom}::DATE)
				AND EXTRACT (MONTH FROM d.INS_TIME) <![CDATA[<=]]> EXTRACT (MONTH FROM #{map.monthTo}::DATE)
			</if>
				AND d.DEL_FLAG = 0
		</trim>
		ORDER BY
			d.ID
	</select>

	<insert id="save" parameterType="java.util.List">
		INSERT INTO daily_meter (
			STOCK_ID,
			TANK_ID,
			SHIFT,
			PRICE_ID,
			METER_OLD,
			METER_NEW,
			METER_ELEC_OLD,
			METER_ELEC_NEW,
			INS_USER
		) VALUES
		<foreach item="daily" collection="dailyList" separator=",">
			(
				0,
				#{daily.tankId},
				#{daily.shift},
				#{daily.priceId},
				#{daily.meterOld},
				#{daily.meterNew},
				#{daily.meterElecOld},
				#{daily.meterElecNew},
				#{daily.insUser}
			)
		</foreach>
	</insert>

	<update id="update" parameterType="ah.petrolmanagement.entity.DailyMeterEntity">
		UPDATE daily_meter SET
			<if test="entity.tankId != null">
				TANK_ID = #{entity.tankId},
			</if>
			<if test="entity.shift != null">
				SHIFT = #{entity.shift},
			</if>
			<if test="entity.priceId != null">
				PRICE_ID = #{entity.priceId},
			</if>
			<if test="entity.meterOld != null">
				METER_OLD = #{entity.meterOld},
			</if>
			<if test="entity.meterNew != null">
				METER_NEW = #{entity.meterNew},
			</if>
			<if test="entity.meterElecOld != null">
				METER_ELEC_OLD = #{entity.meterElecOld},
			</if>
			<if test="entity.meterElecNew != null">
				METER_ELEC_NEW = #{entity.meterElecNew},
			</if>
			UPD_TIME = CURRENT_TIMESTAMP,
			UPD_USER = #{entity.updUser}
		WHERE
			ID = #{entity.id}
	</update>

	<update id="delete" parameterType="ah.petrolmanagement.entity.DailyMeterEntity">
		UPDATE daily_meter SET
			DEL_FLAG = 1,
			DEL_TIME = CURRENT_TIMESTAMP,
			DEL_USER = #{entity.delUser}
		WHERE
			ID = #{entity.id}
	</update>
</mapper>